Index: jonasLib/src/main/java/com/example/jonaslib/RiskLevel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jonasLib/src/main/java/com/example/jonaslib/RiskLevel.java	(date 1603989979621)
+++ jonasLib/src/main/java/com/example/jonaslib/RiskLevel.java	(date 1603989979621)
@@ -0,0 +1,123 @@
+package com.example.jonaslib;
+
+
+/**
+ * Class with all operations to calculate and generate the risk level
+ * The risk level is going to be calculated 3 times a day.
+ * It is also calculated if a key from an infected user is recognized.
+ *
+ * Risk level is a value between 0 and 100.
+ * It is separated into 3 Levels: Low, Medium and High risk of infection.
+ *
+ * Keys from other person increase the value of the Risk level.
+ * The longer a person is exposed to other persons(more keys = longer time of exposion)
+ * the higher the risk level gets raised
+ *
+ * The risk level is always sinking, but it is sinking faster if the level is low.
+ * A high risk level will result in slower sinking of the level.
+ *
+ *
+ * Keys from  infected Users automatictly raise the value to the third level: High risk of infection.
+ *
+ *
+ *
+ * @author jonas
+ * @date 26.10.2020
+ */
+
+//TODO: aktualisieren nach jeder Infektionsmeldung
+//TODO: Alarmmanager to run the method 3 times a day
+
+
+
+public class RiskLevel {
+
+    private int riskLevel;
+    private int daysSinceLastUpdate;
+
+
+    public void RiskLevel(int riskLevel) {
+        if (riskLevel < 0 || riskLevel > 100) {
+            throw new IllegalArgumentException();
+        } else {
+            this.riskLevel = riskLevel;
+        }
+    }
+
+        public int getRiskLevel () {
+            return riskLevel;
+        }
+
+        public int getDaysSinceLastUpdate(){
+        return daysSinceLastUpdate;
+        }
+
+        public void updateRiskLevel (ActionEnum action){
+            if (action == ActionEnum.NO_CONTACT) {
+                this.riskLevel = riskLevel;
+                this.daysSinceLastUpdate =  daysSinceLastUpdate + 1;
+                checkDaysSinceLastContact();
+
+            }
+        }
+
+        public void updateRiskLevel (ActionEnum action,int factor){
+            if (this.riskLevel < 0 || this.riskLevel > 100 || 2 < factor || factor < 1) {
+                throw new IllegalArgumentException("factor has to be 1 or 2 or in between!");
+
+            } else if (action == ActionEnum.NO_CONTACT) {
+
+                this.riskLevel = riskLevel;
+                this.daysSinceLastUpdate = daysSinceLastUpdate++;
+                checkDaysSinceLastContact();
+
+            } else if (action == ActionEnum.INDIRECT_CONTACT && factor == 1) {
+                this.riskLevel = 25;
+                this.daysSinceLastUpdate = 0;
+
+            } else if (action == ActionEnum.INDIRECT_CONTACT && factor > 1) {
+                this.riskLevel = 50;
+                this.daysSinceLastUpdate = 0;
+
+
+            } else if (action == ActionEnum.DIRECT_CONTACT && factor == 1) {
+                this.riskLevel = 75;
+
+            } else if (action == ActionEnum.DIRECT_CONTACT && factor > 1) {
+                this.riskLevel = 100;
+
+            }
+        }
+
+        public void checkDaysSinceLastContact () {
+            if (daysSinceLastUpdate > 14) {
+                this.riskLevel = 0;
+                daysSinceLastUpdate = 0;
+            }
+        }
+
+        public void resetRiskLevel () {
+            this.riskLevel = 0;
+
+        }
+    /*
+    public void checkRiskLevel(){
+
+        if(riskLevel < 33 || riskLevel >= 0){
+            this.riskLevelString = "Low Risk Level!";
+            }
+        if(riskLevel < 67 || riskLevel > 33){
+            this.riskLevelString = "Medium Risk Level!";
+             }
+        if(riskLevel < 101 || riskLevel > 66){
+            this.riskLevelString = "High Risk Level!";
+        }
+            }
+
+     */
+
+
+    }
+
+
+
Index: jonasLib/src/main/java/com/example/jonaslib/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jonasLib/src/main/java/com/example/jonaslib/Main.java	(date 1603989892813)
+++ jonasLib/src/main/java/com/example/jonaslib/Main.java	(date 1603989892813)
@@ -0,0 +1,85 @@
+package com.example.jonaslib;
+
+/**
+ * Main Klasse um die Funktion von Risklevel zu testen
+ *
+ * @author Jonas
+ * 29.10.2020
+ *
+ */
+public class Main {
+
+    public static void main(String[] args) {
+
+        RiskLevel riskLevel = new RiskLevel();
+
+
+        System.out.println("Risklevel: " + riskLevel.getRiskLevel());
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+
+        riskLevel.updateRiskLevel(ActionEnum.INDIRECT_CONTACT,1 );
+
+        System.out.println("Risklevel: " +riskLevel.getRiskLevel());
+
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        riskLevel.updateRiskLevel(ActionEnum.INDIRECT_CONTACT,1 );
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        riskLevel.updateRiskLevel(ActionEnum.DIRECT_CONTACT,2 );
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("Risklevel: " +riskLevel.getRiskLevel());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("Risklevel: " +riskLevel.getRiskLevel());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("Risklevel: " +riskLevel.getRiskLevel());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        riskLevel.updateRiskLevel(ActionEnum.NO_CONTACT);
+        System.out.println("DaySince: " + riskLevel.getDaysSinceLastUpdate());
+        System.out.println("Risklevel: " +riskLevel.getRiskLevel());
+
+
+
+
+
+
+
+
+
+
+    }
+}
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>include ':app'\r\nrootProject.name = \"frontend\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision a9f5c72e730d8cf168e7a8b8ba74d29695e437f4)
+++ settings.gradle	(date 1603985587994)
@@ -1,2 +1,3 @@
+include ':jonasLib'
 include ':app'
 rootProject.name = "frontend"
\ No newline at end of file
Index: jonasLib/src/main/java/com/example/jonaslib/ActionEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jonasLib/src/main/java/com/example/jonaslib/ActionEnum.java	(date 1603985916534)
+++ jonasLib/src/main/java/com/example/jonaslib/ActionEnum.java	(date 1603985916534)
@@ -0,0 +1,5 @@
+package com.example.jonaslib;
+
+
+
+public enum ActionEnum {DIRECT_CONTACT, INDIRECT_CONTACT, NO_CONTACT}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleHome\" value=\"$PROJECT_DIR$/../../../../Program Files/Gradle/gradle-6.3\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision a9f5c72e730d8cf168e7a8b8ba74d29695e437f4)
+++ .idea/gradle.xml	(date 1603985603889)
@@ -13,6 +13,7 @@
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/jonasLib" />
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1603985603866)
+++ .idea/compiler.xml	(date 1603985603866)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.7">
+      <module name="frontend.app" target="1.8" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision a9f5c72e730d8cf168e7a8b8ba74d29695e437f4)
+++ .idea/misc.xml	(date 1603985603854)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
